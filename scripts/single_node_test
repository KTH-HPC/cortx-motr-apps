#/*
# * COPYRIGHT 2014 SEAGATE LLC
# *
# * THIS DRAWING/DOCUMENT, ITS SPECIFICATIONS, AND THE DATA CONTAINED
# * HEREIN, ARE THE EXCLUSIVE PROPERTY OF SEAGATE LLC,
# * ISSUED IN STRICT CONFIDENCE AND SHALL NOT, WITHOUT
# * THE PRIOR WRITTEN PERMISSION OF SEAGATE TECHNOLOGY LIMITED,
# * BE REPRODUCED, COPIED, OR DISCLOSED TO A THIRD PARTY, OR
# * USED FOR ANY PURPOSE WHATSOEVER, OR STORED IN A RETRIEVAL SYSTEM
# * EXCEPT AS ALLOWED BY THE TERMS OF SEAGATE LICENSES AND AGREEMENTS.
# *
# * YOU SHOULD HAVE RECEIVED A COPY OF SEAGATE'S LICENSE ALONG WITH
# * THIS RELEASE. IF NOT PLEASE CONTACT A SEAGATE REPRESENTATIVE
# * http://www.xyratex.com/contact
# *
# * Original author:  Ganesan Umanesan <ganesan.umanesan@seagate.com>
# * Original creation date: 10-Jan-2017
# */


#!/usr/bin/env bash
#
# This script clean install given Mero packages.
# It should work on Red Hat and Debian based systems.
#
# Ganesan Umanesan <ganesan.umanesan@seagate.com>
# 21/02/2017

c0cp='./c0cp'
c0rm='./c0rm'
c0ct='./c0ct'
fgen='./fgen'

#####
#c0fidtest()
#####
c0fidtest()
{ 
	log="snodet"	#logs
	out="fidout"	#fids
	bsz=${1:-4096}	#bsize (default 4K)
	cnt=${2:-64 }	#count (default 64)
	num=${3:-10}	#tests (default 10)
	
	bsz=$((bsz))
	cnt=$((cnt))
	num=$((num))
	
	log="$log-$$_bsz${bsz}_cnt${cnt}_num${num}.log"
	out="$out-$$_$(date +%Y%m%d-%H:%M:%S).txt"
	log=$(pwd)/$log	#send to working directory
	out=$(pwd)/$out	#send to working directory

	log='/dev/null'
	out='/dev/stdout'
	
	echo $log
	echo $out
	
	#move to executable directory
	pushd $(dirname $(dirname $0))

	#check executables	
	if [[ ! -x "$c0cp" ]]; then
    	echo "error! file $c0cp is not executable nor found"
    	return 11
	fi
	if [[ ! -x "$c0cp" ]]; then
    	echo "error! file $c0cp is not executable nor found"
    	return 12
	fi
	if [[ ! -x "$c0ct" ]]; then
    	echo "error! file $c0ct is not executable nor found"
    	return 13
	fi
	if [[ ! -x "$c0rm" ]]; then
    	echo "error! file $c0rm is not executable nor found"
    	return 14
	fi
	if [[ ! -x "$fgen" ]]; then
    	echo "error! file $fgen is not executable nor found"
    	return 15
	fi
	
	echo "block size = $bsz, count = $cnt tests = $num"	
	dd if=/dev/urandom of=/tmp/8kFile bs=$bsz count=$cnt
	ls -lh /tmp/8kFile	

	echo $(date)
	echo $(date) >> $out
	for i in $(eval echo "{1..$num}"); do
	
		fid=$($fgen 2>> $log)
		printf "%03d: %s" "$i" "$fid" >> $out
		
		#c0cp
	   	$c0cp $fid /tmp/8kFile $bsz $cnt 2>> $log
	   	if [[ $? -ne 0 ]]; then
	   		echo
	  		echo "$c0cp $fid /tmp/8kFile $bsz $cnt 2>> $log"
	  		return 20
	  	else
	  		rm -f m0trace.*
		fi
	   	
		#c0cat
		$c0ct $fid $bsz $cnt > /tmp/8kFile_downloaded 2>> $log
	   	if [[ $? -ne 0 ]]; then
	   		echo
	  		echo "$c0ct $fid $bsz $cnt > /tmp/8kFile_downloaded 2>> $log"
	  		return 21
	  	else
	  		rm -f m0trace.*
		fi

		#cmp		
		cmp /tmp/8kFile /tmp/8kFile_downloaded
	   	if [[ $? -ne 0 ]]; then
	   		echo
	  		echo "cmp /tmp/8kFile /tmp/8kFile_downloaded"
	  		return 22
	  	else
	  		rm -f m0trace.*
		fi
	
		#c0rm
		$c0rm $fid 2>> $log 
	   	if [[ $? -ne 0 ]]; then
	   		echo
	  		echo "$c0rm $fid 2>> $log"
	  		return 23
	  	else
	  		rm -f m0trace.*
		fi
		  
		printf "\t [ OK ]\n" >> $out
	done

	
	echo $(date) >> $out
	echo $(date)

	#move to working directory
	popd

	#success
	return 0
}

#main
if [[ "$#" -ne 3 ]]; then
    echo "illegal number of parameters"
    echo "$(basename $0) <block size> <count> <number of tests>"
    echo "$(basename $0) 4096 64 10"
    exit
fi

#c0fidtest
c0fidtest $1 $2 $3
if [[ $? -ne 0 ]]; then
	echo "c0fidtest $1 $2 $3"
	echo "failed!!"
else
	echo "c0fidtest $1 $2 $3"
	echo "success!!"
fi
exit
