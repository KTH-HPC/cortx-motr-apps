# Ganesan Umanesan <ganesan.umanesan@seagate.com>
# 10/02/2019 - Initial script
# 11/02/2019 - getchar function added
# 26/02/2019 - functions added
# 26/02/2019 - getoption added

#!/usr/bin/env bash

INTERACTIVE=0
WHOLESYSTEM=1
CLIENTS=client-2[1-8]
SERVERS=
SERVERS+=sage-tier1-[1-2],
SERVERS+=sage-tier2-[1-4],
SERVERS+=sage-tier3-[1-1],

getchar()
{
	if [ "$INTERACTIVE" -eq 1 ]; then
	echo -n "Press key:"
	read -n1
	fi
}


sshstat()
{
	echo "-[ ssh ]-"
	pdsh -w  $CLIENTS uname -r | sort
	getchar
	echo "-[ ssh ]-"
	pdsh -w  $SERVERS uname -r | sort
	getchar
}


merorpms()
{
	echo "-[ mero rpm ]-"
	pdsh -w  $CLIENTS rpm -qa | grep mero-1.4 | sort
	getchar
	echo "-[ mero rpm ]-"
	pdsh -w  $SERVERS rpm -qa | grep mero-1.4 | sort
	getchar
}

halonrpms()
{
	echo "-[ halon rpm ]-"
	pdsh -w  $CLIENTS rpm -qa | grep halon- | sort
	getchar
	echo "-[ halon rpm ]-"
	pdsh -w  $SERVERS rpm -qa | grep halon- | sort
	getchar
}


lnetrpms()
{
	echo "-[ lnet(clients) ]-"
	pdsh -w  $CLIENTS  rpm -q lustre-client-* | sort | cat -n
	pdsh -w  $CLIENTS  rpm -q lustre-client-devel-* | sort | cat -n
	pdsh -w  $CLIENTS  rpm -q kmod-lustre-client-* | sort | cat -n
	getchar
	echo "-[ lnet(servers) ]-"
	pdsh -w  $SERVERS  rpm -q lustre-client-* | sort | cat -n
	pdsh -w  $SERVERS  rpm -q lustre-client-devel-* | sort | cat -n
	pdsh -w  $SERVERS  rpm -q kmod-lustre-client-* | sort | cat -n
	getchar
}


lnetstat()
{
	echo "-[ lnet status(clients) ]-"
	pdsh -w  $CLIENTS sudo lnetctl net show 2> /dev/null | grep @lo | sort | cat -n
	pdsh -w  $CLIENTS sudo lnetctl net show 2> /dev/null | grep @tcp | sort | cat -n
	pdsh -w  $CLIENTS sudo lnetctl net show 2> /dev/null | grep @o2ib | sort | cat -n
	pdsh -w  $CLIENTS sudo lnetctl net show 2> /dev/null | sort
	getchar
	echo "-[ lnet status(servers) ]-"
	pdsh -w  $SERVERS sudo lnetctl net show 2> /dev/null | grep @lo | sort | cat -n
	pdsh -w  $SERVERS sudo lnetctl net show 2> /dev/null | grep @tcp | sort | cat -n
	pdsh -w  $SERVERS sudo lnetctl net show 2> /dev/null | grep @o2ib | sort | cat -n
	pdsh -w  $SERVERS sudo lnetctl net show 2> /dev/null | sort
	getchar
}

merostat()
{
	echo "-[ Mero status(clients) ]-"
	ssh -A client-21 hctl mero status | grep client
	getchar
	echo "-[ Mero status(tier nodes) ]-"
	ssh -A client-21 hctl mero status | grep sage-tier
	getchar
	echo "-[ Mero status(pools) ]-"
	ssh -A client-21 hctl mero status | grep pool
}

#
# MAIN
#

echo '#####'
echo `date`
echo '#####'


# Note that we use `"$@"' to let each command-line parameter expand to a
# separate word. The quotes around `$@' are essential!
# We need TEMP as the `eval set --' would nuke the return value of getopt.
TEMP=$( getopt -o isrlm --long interactive,ssh,rpms,lnet,mero \
        -n "$PROG_NAME" -- "$@" )

[[ $? != 0 ]] && echo 'help please'

# Note the quotes around `$TEMP': they are essential!
eval set -- "$TEMP"

while true ; 
	do
    case "$1" in
        -i|--interactive)           
       	INTERACTIVE=1
      	shift
       	;;
       	-s|--ssh)
       	WHOLESYSTEM=0
      	sshstat
      	shift
     	;;
     	-r|--rpms)
       	WHOLESYSTEM=0
       	merorpms
       	halonrpms
       	lnetrpms
     	shift
      	;;
     	-l|--lnet)
       	WHOLESYSTEM=0
    	lnetstat
     	shift
    	;;
     	-m|--mero)
       	WHOLESYSTEM=0
    	merostat
    	shift
    	;;  	
		--)     
       	shift
     	break 
     	;;
    	*)
      	echo 'getopt: internal error...'
      	exit 1 
      	;;
   	esac
    done

# do all if no options
if [ $WHOLESYSTEM -eq 1 ]; then
	sshstat
	merorpms
	halonrpms
	lnetrpms
	lnetstat
	merostat
fi

echo '#####'
echo "Done."
echo '#####'
